name: Jira Integration

on:
  push:
    branches:
      - master  # Runs when you push changes to main
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' # Runs every hour

jobs:
  run-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Run Jira Integration  
        run: |
          image_name="ghcr.io/port-labs/port-ocean-jira:latest"
          
          echo "OCEAN__PORT__CLIENT_ID=${{ secrets.PORT_CLIENT_ID }}" >> .sail-env
          echo "OCEAN__PORT__CLIENT_SECRET=${{ secrets.PORT_CLIENT_SECRET }}" >> .sail-env
          echo "OCEAN__PORT__BASE_URL=https://api.port.io" >> .sail-env
          
          echo "OCEAN__EVENT_LISTENER={\"type\":\"ONCE\"}" >> .sail-env
          echo "OCEAN__INITIALIZE_PORT_RESOURCES=true" >> .sail-env
          
          echo "OCEAN__INTEGRATION__CONFIG__JIRA_HOST=${{ secrets.JIRA_HOST }}" >> .sail-env
          echo "OCEAN__INTEGRATION__CONFIG__ATLASSIAN_USER_EMAIL=${{ secrets.ATLASSIAN_USER_EMAIL }}" >> .sail-env
          echo "OCEAN__INTEGRATION__CONFIG__ATLASSIAN_USER_TOKEN=${{ secrets.ATLASSIAN_USER_TOKEN }}" >> .sail-env

          # Mapping config: link components to repositories
          cat <<EOF >> .sail-env
          OCEAN__INTEGRATION__CONFIG__CONFIG={
            "resources": {
              "jira_issue": {
                "mappings": {
                  "identifier": "key",
                  "title": "fields.summary",
                  "properties": {
                    "status": "fields.status.name",
                    "assignee": "fields.assignee.displayName"
                  },
                  "relations": {
                    "repository": "{% for component in fields.components %}{{ component.name }}{% if not loop.last %},{% endif %}{% endfor %}"
                  }
                }
              }
            }
          }
          EOF
          
          docker run -i --rm --platform=linux/amd64 --env-file .sail-env $image_name
          
          echo "exit_code=$?" >> $GITHUB_ENV